{"version":3,"sources":["components/Header.js","components/Title.js","components/Movies.js","components/MoviesUsers.js","App.js","index.js"],"names":["Header","className","Title","title","MOVIES","gql","Movies","useQuery","loading","error","data","console","log","movie","map","id","original_title","poster_path","genreByGenre","style","backgroundImage","name","USERS","MoviesUsers","useSubscription","Users","id_user","created_at","App","httpLink","HttpLink","uri","headers","webSocketLink","WebSocketLink","options","reconnect","connectionParams","splitLink","split","query","definition","getMainDefinition","kind","operation","client","ApolloClient","cache","InMemoryCache","link","render","ApolloProvider","document","getElementById"],"mappings":"mOAEe,SAASA,IACvB,OACC,qBAAKC,UAAU,2DAAf,SACC,oBAAIA,UAAU,qBAAd,gD,8BCHY,SAASC,EAAT,GAAyB,IAATC,EAAQ,EAARA,MAC9B,OACC,qBAAKF,UAAU,qBAAf,SACEE,ICDJ,IAAMC,EAASC,YAAH,2MAcG,SAASC,IACvB,MAA+BC,YAASH,GAAjCI,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,KAGvB,OADAC,QAAQC,IAAIH,GACTD,EAAgB,6CAChBC,EAAc,sCAGhB,sBAAKR,UAAU,OAAf,UACC,cAACC,EAAD,CAAOC,MAAM,WACb,qBAAKF,UAAU,yBAAf,SACES,EAAKG,MAAMC,KAAI,YAA2D,IAAzDC,EAAwD,EAAxDA,GAAIZ,EAAoD,EAApDA,MAAOa,EAA6C,EAA7CA,eAAgBC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aACzD,OACC,qBAAcjB,UAAU,+IAAxB,SAEC,sBAAKA,UAAU,+CAAf,UACC,qBAAKA,UAAU,qCACbkB,MAAO,CAACC,gBAAgB,8CAAD,OAAgDH,MAEzE,oBAAIhB,UAAU,oBAAd,SAAmCE,IACnC,gCAAQa,IACR,qBAAKf,UAAU,2DAAf,SACC,uBAAOA,UAAU,oBAAjB,SAAsCiB,EAAaG,aAT5CN,W,cC1BVO,EAAQjB,YAAH,8GAUI,SAASkB,IACvB,MAA+BC,YAAgBF,GAAxCd,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,KAGvB,OADAC,QAAQC,IAAIH,GACTD,EAAgB,6CAChBC,EAAc,sCAGhB,sBAAKR,UAAU,aAAf,UACC,cAACC,EAAD,CAAOC,MAAM,aACb,8BACEO,EAAKe,MAAMX,KAAI,YAA6C,IAA3CY,EAA0C,EAA1CA,QAASL,EAAiC,EAAjCA,KAAMM,EAA2B,EAA3BA,WAA2B,EAAfV,YAC5C,OACC,qBAAmBhB,UAAU,gEAA7B,SACC,sBAAKA,UAAU,mBAAf,UACC,oBAAIA,UAAU,oBAAd,SAAmCoB,IACnC,oDAAuBM,SAHfD,WCvBD,SAASE,IACtB,OACE,gCACE,cAAC5B,EAAD,IACA,cAACuB,EAAD,IACA,cAACjB,EAAD,O,UCHAuB,EAAW,IAAIC,IAAS,CAC5BC,IAAI,wCACJC,QAAS,CACP,wBAAyB,sEAIvBC,EAAgB,IAAIC,IAAc,CACtCH,IAAI,qCACJI,QAAQ,CACNC,WAAW,EACXC,iBAAiB,CACfL,QAAQ,CACN,wBAAyB,wEAM3BM,EAAWC,aACf,YAAY,IAAVC,EAAS,EAATA,MACMC,EAAaC,YAAkBF,GACrC,MACsB,wBAApBC,EAAWE,MACc,iBAAzBF,EAAWG,YAEZX,EAAeJ,GAGdgB,EAAS,IAAIC,IAAa,CAC9BC,MAAO,IAAIC,IACXC,KAAMX,IAGRY,iBAAQ,cAACC,EAAA,EAAD,CAAgBN,OAAQA,EAAxB,SACE,cAACjB,EAAD,MAEFwB,SAASC,eAAe,W","file":"static/js/main.697a64a2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header() {\r\n\treturn (\r\n\t\t<div className='fixed top-0 bg-gray-800 text-white w-full p-3 px-10 z-10'>\r\n\t\t\t<h2 className='text-2xl font-bold'>\r\n\t\t\t\tCliente Hasura con Subscriptions\t\r\n\t\t\t</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Title({title}) {\r\n\treturn (\r\n\t\t<div className='font-bold text-2xl'>\r\n\t\t\t{title}\t\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport Title from './Title';\r\n\r\nconst MOVIES = gql`\r\n\tquery MyQuery {\r\n\t\tmovie(limit: 50, offset: 0) {\r\n\t\t\tid\r\n\t\t\ttitle\r\n\t\t\toriginal_title\r\n\t\t\tposter_path\r\n\t\t\tgenreByGenre {\r\n\t\t\t\tname\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport default function Movies() {\r\n\tconst {loading, error, data} = useQuery(MOVIES);\r\n\t\r\n\tconsole.log(error);\r\n\tif(loading) return <p>Cargando ...</p>\r\n\tif(error) return <p>Error</p>\r\n\r\n\treturn (\r\n\t\t<div className='p-10'>\r\n\t\t\t<Title title=\"Movies\" />\r\n\t\t\t<div className='grid grid-cols-3 gap-4'>\r\n\t\t\t\t{data.movie.map(({id, title, original_title, poster_path, genreByGenre})=>{\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={id} className='rounded-md bg-gray-100 my-5 shadow-md m-auto p-5 w-80 h-96 flex \r\n\t\t\t\t\t\t\t\t\t\t\t\ttransform duration-300 ease-in-out hover:-translate-y-3 hover:bg-gray-300'>\r\n\t\t\t\t\t\t\t<div className='mb-0 m-auto ml-0 flex flex-col w-full h-full'>\r\n\t\t\t\t\t\t\t\t<div className='w-full h-full bg-gray-500 bg-cover' \r\n\t\t\t\t\t\t\t\t\t\tstyle={{backgroundImage: `url(https://www.themoviedb.org/t/p/original${poster_path}`}}>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<h2 className='font-bold text-lg'>{title}</h2>\r\n\t\t\t\t\t\t\t\t<label>{original_title}</label>\r\n\t\t\t\t\t\t\t\t<div className='bg-gray-500 rounded-full w-auto max-w-max px-3 flex mt-2'>\r\n\t\t\t\t\t\t\t\t\t<label className='m-auto text-white'>{genreByGenre.name}</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { useSubscription } from '@apollo/client';\r\nimport gql from 'graphql-tag'\r\nimport React from 'react'\r\nimport Title from './Title';\r\n\r\nconst USERS = gql`\r\nsubscription{\r\n  Users(limit: 20) {\r\n    id_user\r\n    name\r\n\tcreated_at\r\n  }\r\n}\r\n`;\r\n\r\nexport default function MoviesUsers() {\r\n\tconst {loading, error, data} = useSubscription(USERS);\r\n\r\n\tconsole.log(error);\r\n\tif(loading) return <p>Cargando ...</p>\r\n\tif(error) return <p>Error</p>\r\n\r\n\treturn (\r\n\t\t<div className='p-10 pt-20'>\r\n\t\t\t<Title title=\"Usuarios\" />\r\n\t\t\t<div >\r\n\t\t\t\t{data.Users.map(({id_user, name, created_at, poster_path})=>{\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={id_user} className='rounded-md bg-gray-100 my-5 shadow-md m-auto p-5 w-full  flex'>\r\n\t\t\t\t\t\t\t<div className='mb-0 m-auto ml-0'>\r\n\t\t\t\t\t\t\t\t<h2 className='font-bold text-lg'>{name}</h2>\r\n\t\t\t\t\t\t\t\t<label>Creation Date: {created_at}</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\nimport Header from './components/Header'\nimport Movies from './components/Movies'\nimport MoviesUsers from './components/MoviesUsers'\n\nexport default function App() {\n  return (\n    <div>\n      <Header />\n      <MoviesUsers />\n      <Movies />\n    </div>\n  )\n}","import { ApolloProvider, ApolloClient, HttpLink, InMemoryCache, split } from \"@apollo/client\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { WebSocketLink } from \"@apollo/link-ws\";\nimport {render} from 'react-dom';\nimport App from \"./App\";\nimport './index.css';\n\nconst httpLink = new HttpLink({\n  uri: `https://movies1.hasura.app/v1/graphql`,\n  headers: {\n    'x-hasura-admin-secret': \"A2AWfzsWLPMVnKzfOtZAmUOY07GkAZzk1D4ULzuveOuaZUklMCPYLBBJElRSxFfD\"\n  }\n});\n\nconst webSocketLink = new WebSocketLink({\n  uri: `ws://movies1.hasura.app/v1/graphql`,\n  options:{\n    reconnect: true,\n    connectionParams:{\n      headers:{\n        'x-hasura-admin-secret': \"A2AWfzsWLPMVnKzfOtZAmUOY07GkAZzk1D4ULzuveOuaZUklMCPYLBBJElRSxFfD\"\n      }\n    }\n  }\n});\n\nconst splitLink= split(\n  ({query})=>{\n    const definition = getMainDefinition(query);\n    return(\n      definition.kind === \"OperationDefinition\" &&\n      definition.operation === \"subscription\"\n    );\n  }, webSocketLink, httpLink\n);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: splitLink\n})\n\nrender( <ApolloProvider client={client}>\n          <App/>\n        </ApolloProvider>, \n        document.getElementById(\"root\"));\n\n"],"sourceRoot":""}